@model ChatModel

@{
    ViewData["Title"] = "Home Page";
    var userName = User.Identity.Name;
    var userId = Model.CallerId;
    var id = Model.Id;
    var auList = Model.FriendList;
    var dList = Model.DialogsWithFriendsList.Count;
}



<div class="jumbotron bg-light" id="mainContainer">

    <div class="row" id="friendsAndChat">
        @*список диалогов с друзьями*@
        @if (Model.DialogsWithFriendsList.Count != 0)
        {
            <div class="col-md-3" id="friends">
                Friends

                <form class="form-inline d-flex md-form form-sm active-cyan active-cyan-2 mt-2" id="searchDialog">

                    <input class="form-control form-control-sm ml-0 w-100" type="text" placeholder="Search"
                           aria-label="Search">
                    @*<i class="fas fa-search" aria-hidden="true" id="iSearch"></i>*@
                </form>


                <div class="scrollbar scrollbar-gray bordered-gray thin" id="friendsBar">
                    <div class="force-overflow">
                        @foreach (var dialog in Model.DialogsWithFriendsList.OrderByDescending(m => m.LastActivityUtc))
                        //    @foreach (var dialog in Model.DialogsWithFriendsList)
                        {
                            string containerClass, timePosition, textAlign, contcolor, offset;

                            containerClass = "container";
                            timePosition = "time-left";
                            textAlign = "sendertext-left";
                            contcolor = "bg-light";

                            var participant = dialog.Participants.FirstOrDefault(i => i.AppUserId != userId);

                            var msg = dialog.Messages.Count != 0 ? (dialog.Messages.OrderBy(t => t.CreatedUtc).Last().Text) : ("");
                            //   var msg = dialog?.Messages?.OrderBy(t=>t.CreatedUtc).Last();

                            <div class="border-bottom" id="bordersForDialog">
                                <div class="row friend" data-dialog-id="@dialog.Id" data-friend-id="@participant.AppUserId" id="dialogRow">
                                    <div class="col-md-1">
                                        <img src="Images/pf.jpg"
                                             width="50" height="50" alt="avatar" class="rounded-circle">
                                    </div>

                                    <div class="col-md-2 offset-md-2">
                                        <div class="@containerClass @contcolor" id="loginContainer" style="width: 130px;">
                                            <p class="sender @textAlign" id="senderForDialog">@participant.AppUserName</p>
                                            <p class="sender @textAlign" style="font-size: 12px; text-overflow: ellipsis; margin-bottom: 0px">@msg</p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>


            @*сообщения        *@
            <div class="col-md-9" id="chat">
                <div class="row" id="rowForMessageScroll">

                    <div class="scrollbar scrollbar-indigo bordered-indigo" id="messagesBar">
                        <div class="force-overflow">
                            
                            <div id="viewPlaceHolder">

                            </div>
                            <br /><br />
                            @*<partial name="_Messages"/>*@
                            @*@Html.Partial("_Messages")*@

                            @*@await Html.PartialAsync("Messages")*@

                        </div>
                    </div>
                </div>


                <form asp-action="Send"
                      data-ajax-begin="clearInputField" data-ajax-complete=""
                      data-ajax-failure="alert('Fail')" data-ajax-success="sendMessageToPublicChat"
                      data-ajax="true" data-ajax-method="POST">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="d-flex form-group">
                        <input name="Text" class="form-control" id="messageText" />

                        @*<button type="button" class="btn btn-outline-primary" id="submitButton" value="Send">Send</button>*@
                        <input type="submit" value="Send" id="submitButton" class="btn " />
                    </div>

                    <input type="hidden" value="@userName" name="username" />
                </form>
            </div>


        }

        else
        {
            <h1>Let's find your friend soon</h1>
        }
    </div>
</div>


@if (User.Identity.IsAuthenticated)
{
    <script>
        const userName = "@ViewBag.CurrentUserName";
    </script>
}



<script type="text/javascript">
    $('.dialog').click(function() {
        let dialogId = $(this).attr('data-dialog-id').val;
        let userId = $(this).attr('data-friend-id').val;

        $("#messagesBar").load("/home/getmessages/" + dialogId);
        //$.get("/home/getmessages/" + dialogId, function( data ) {
        //    //   alert("You're not friends anymore with " + userId);
        //});
    });
</script>




<script>
        $("#dialogRow").click(function()  {
            var dialogId = $(this).attr('data-dialog-id');
            var userId = $(this).attr('data-friend-id');

            $("#viewPlaceHolder").load("/home/getmessages", { dialogId: dialogId, userId: userId });
        });
</script>

<script src="~/lib/signalr/signalr.min.js"></script>
<script src="~/lib/jquery/dist/jquery.unobtrusive-ajax.min.js"></script>
<script src="~/js/chat.js"></script>
<script src="~/js/signalrReqHandler.js"></script>

