@model ChatModel

@{
    ViewData["Title"] = "Home Page";
    var userName = User.Identity.Name;
    var userId = Model.CallerId;
    var id = Model.Id;
    var dList = Model.DialogsWithFriendsList.Count;
}



<div class="jumbotron" id="mainContainer">

    <div class="row" id="friendsAndChat">
        @*список диалогов с друзьями*@
        @if (Model.DialogsWithFriendsList.Count != 0)
        {
            <div class="col-md-3" id="friends" style="padding-top: 1rem; ">
                <div style="padding-left: 1rem">
                    Friends

                    <form class="form-inline d-flex md-form form-sm active-cyan active-cyan-2 mt-2" id="searchDialog">
                        <input class="form-control form-control-sm ml-0 w-100" type="text" placeholder="Search"
                               aria-label="Search" id="searchRow" onkeyup="SearchFunction()">
                    </form>
                </div>


                <div class="scrollbar scrollbar-gray bordered-gray thin" id="friendsBar">
                    <div class="force-overflow">
                        <div id="viewForDialogs">
                            <ul id="myUL" style="list-style-type:none; width: 260px; padding-left: 0rem; margin-left: 0rem">
                                @foreach (var dialog in Model.DialogsWithFriendsList.OrderByDescending(m => m.LastActivityUtc))
                                {
                                    string containerClass, timePosition, textAlign, contcolor, offset;

                                    containerClass = "container";
                                    timePosition = "time-left";
                                    textAlign = "sendertext-left";


                                    var participant = dialog.Participants.FirstOrDefault(i => i.AppUserId != userId);

                                    var msg = dialog.Messages.Count != 0 ? (dialog.Messages.OrderBy(t => t.CreatedUtc).Last().Text) : ("");
                                    var newMessages = dialog.Messages.Where(x => x.Read == false).Where(s=>s.OwnerId==userId).ToList().Count;

                                    <li>
                                        <div class="border-bottom" id="bordersForDialog" style="border-color: #bab6b6">
                                            <div class="row friend" data-dialog-id="@dialog.Id" data-friend-id="@participant.AppUserId" id="dialogRow">
                                                
                                                <div class="col-md-1 offset-md-1">
                                                    <img src="Images/pf.jpg"
                                                         width="50" height="50" alt="avatar" class="rounded-circle">
                                                </div>

                                                <div class="col-md-2 offset-md-2">
                                                    <div class="@containerClass" id="loginContainer">
                                                        <p class="sender @textAlign" id="senderForDialog" style="margin-bottom: 0.5rem;">@participant.AppUserName</p>
                                                        <p class="sender @textAlign" id="messageFromDialogRow" style="font-size: 12px; overflow-x: hidden; text-overflow: ellipsis; margin-bottom: 0px; color: gray">@msg</p>
                                                    </div>
                                                </div>

                                                <div class="col-md-1 offset-md-3">
                                                    @if (newMessages != 0)
                                                    {
                                                        <span class="badge badge-pill badge-primary" style="margin-top: 30px; margin-left: 20px; font-size: 10px">@newMessages</span>
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    </li>
                                 }
                            </ul>
                        </div>
                    </div>
                </div>
            </div>


            @*сообщения        *@
            <div class="col-md-9" id="chat">
                <div class="row" id="rowForMessageScroll">

                    <div class="scrollbar scrollbar-indigo bordered-indigo" id="messagesBar">
                        <div class="force-overflow" id="msgScroll">
                            <div id="viewPlaceHolder">

                            </div>
                            <br /><br />
                        </div>
                    </div>
                </div>


                <div class="row" id="rowForMessageScroll">
                    <div class="d-flex form-group" id="textAndButtonForSend">
                        <input name="Text" class="form-control" id="messageText" />
                        <button type="button" class="btn btn-outline-primary" id="sendButton">Send</button>
                    </div>
                </div>

                <input type="hidden" value="@userName" name="username" />
            </div>
        }

        else
        {
            <h1 style="margin-left: 1rem">Let's find your friend soon</h1>
        }
    </div>
</div>

<script src="~/lib/signalr/signalr.min.js"></script>
<script src="~/lib/jquery/dist/jquery.unobtrusive-ajax.min.js"></script>


<script>
    var _dialogId;
    $(".row.friend").click(function () {

        if (_dialogId != null) {
            $(".row.friend").css('background', '#d5dce3');
            $(".row.friend").css('color', 'black');

        }

        var dialogId = $(this).attr('data-dialog-id');
        var userId = $(this).attr('data-friend-id');
        $(this).css('background', '#4972a6');
        $(this).css('color', 'white');
        $("#viewPlaceHolder").load("/home/getmessagesfordialog", { dialogId: dialogId });

        _dialogId = dialogId;
    });
</script>



<script>
    const hubConnection = new signalR.HubConnectionBuilder()
        .withUrl("/ChatHub")
        .build();

    hubConnection.on("GetMessage", function (dId ) {
        $("#viewPlaceHolder").load("/home/getmessagesfordialog", { dialogId: dId });

        $.ajax({
            type: "GET",
            url: "/home/GetNewMessageForIndex/" + dId,
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {

                var ul = document.getElementById("myUL");
                var li = ul.getElementsByTagName("li");

                for (i = 0; i < li.length; i++) {

                    var p = li[i].getElementsByTagName("p")[0];
                    var name = p.textContent || p.innerText;

                    if (name === result[0].senderUserName || name === result[0].ownerUserName ) {
                        //то обновить текст сообщения и количество непрочитанных
                        var oldMsg = li[i].getElementsByTagName("p")[1];
                        oldMsg.textContent = result[0].text;
                        oldMsg.innerText = result[0].text;
                    }
                }
            },
            error: function (err) {

                console.log(err);
                alert('error');
            }
        });  

    });

    document.getElementById("sendButton").addEventListener("click", function (e) {
        let message = document.getElementById("messageText").value;
        let inputText = document.getElementById('messageText');
        hubConnection.invoke("SendMessage", message, parseInt(_dialogId));
        inputText.value = "";
    });

    hubConnection.start();
</script>



@if (User.Identity.IsAuthenticated)
{
    <script>
        const userName = "@ViewBag.CurrentUserName";
    </script>
}



<script>
    function SearchFunction() {
        var input, filter, ul, li, a, i, txtValue;
        input = document.getElementById("searchRow");
        filter = input.value.toUpperCase();
        ul = document.getElementById("myUL");
        li = ul.getElementsByTagName("li");
        for (i = 0; i < li.length; i++) {
            a = li[i].getElementsByTagName("p")[0];
            txtValue = a.textContent || a.innerText;
            if (txtValue.toUpperCase().indexOf(filter) > -1) {
                li[i].style.display = "";
            } else {
                li[i].style.display = "none";
            }
        }
    }
</script>



@*<script>
        $("#viewPlaceHolder").onload = toBottom;
        function toBottom() {
            $("#viewPlaceHolder").scrollTo(0, document.body.scrollHeight);
        }
    </script>*@


@*SCROLL DIALOG
        <script>
        $("#messagesBar").animate({ scrollTop: $("#messagesBar").height() }, 'slow');
    </script>
*@

